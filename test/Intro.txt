                            HỆ ĐIỀU HÀNH LÀ GÌ?
Hệ điều hành
    - OS (Operating System) có nghĩ là một phần mềm nền tảng cho phép vận hành
        các ứng dụng khác trên một thiết bị điện tử bất kỳ. Thông qua hệ điều hành,
        người dùng có thể điều hành, quản lý các thiết bị phần cứng và tài nguyên phần mềm.

    * Chức năng: 
        + Tổ chức giao tiếp giữa người dùng và hệ thống.
        + Cung cấp các tài nguyên có các chương trình và cách tổ chức thực hiện các chương trình đó.
        + Tổ chức lưu trữ thông tin trên bộ nhớ ngoài, cung cấp các công cụ để tìm kiếm và truy cập thông tin.
        + Kiểm tra và hỗ trợ bằng phần mềm cho các thiết bị ngoại vi để khai thác chúng một cách thuận tiện hiệu quả.
        + Cung cấp các dịch vụ tiện ích hệ thống
    


                            HỆ ĐIỀU HÀNH NHÚNG LÀ GÌ?
Khái niệm: Một hệ điều hành nhúng là một hệ điều hành cho các hệ thống nhúng. Loại hệ điều hành
            này thường được thiết kế để tiết kiệm tài nguyên và đáng tin cậy.
    -   Phần cứng chạy hệ điều hành nhúng có thể rất hạn chế về tài nguyên như RAM và  ROM, do đó thiết kế nhứng 
            của các hệ điều hành này có thể có phạm vi hẹp phù hợp với ứng dụng cụ thể để đạt được hoạt động mong
            muốn theo các ràng buộc này
    -   Để tận dụng tốt hơn sức mạnh xử lý của CPU, các nhà phát triển phần mềm có thể viết mã quan trọng trực tiếp
            bằng ngôn ngữ máy (tốc độ, chi phí, khả năng bảo trì), hoặc nguôn ngữ khả chuyển (portable language) như C.

Các hệ điều hành dùng trong các hệ nhúng nổi trội hiện nay:
    Embedded Linux, VxWorks, Win CE, Lynyos, BDS, Green Hills, QNX vaf DOS
Có 2 loại hệ thống nhúng:
    +   Hệ thống biến đổi (Tranformative System)
    +   Hệ thống phản ứng (Reactive System)
                            
                            
                            HỆ ĐIỀU HÀNH NHÚNG THỜI GIAN THỰC LÀ GÌ?
Ý tưởng cơ bản của thời gian thức thể hiện ở chỗ: một hệ thống phải có những phản ứng thích hợp, đúng thời điểm với môi trường
    nó. Thời gian thực có nghĩa "đủ nhanh" trong một ngữ cảnh, một môi trường mà hệ thống đang hoạt động, đáng tin cậy và chính xác.

Về cơ bản, chương trình có tính thời gian thực phải có khả năng phản ứng lại các sự kiện trong môi trường mà hệ thống làm việc trong 
    khoảng thời gian nhất định cho trước. Hệ thống như vậy gọi là hệ thống hướng sự kiên(event-driven)

            Một hệ thống thời gian thực có thể được chia làm 2 loại:
        +   "Thời gian thực cứng" (hard real-time)
        +   "Thời gian thực mềm" (soft real-time)

*** Khái niệm: Hệ điều hành thời gian thực - Real Time Operating Systems (RTOS), là phần mềm điều khiển chuyên dụng trong những ứng dụng
    điện toán nhúng có tài nguyên bộ nhớ hạn chế và yêu cầu ngặt nghèo về thời gian đáp ứng tức thời, tính sẵn sàng cao và khả năng tự kiểm
    một cách chính xác
*** RTOS phổ biến: Làm việc bên trong các bộ định tuyến và chuyển mạch trên mạng, thiết bị y tế, thiết bị đo lường và điều khiển công nghiệp và 
    các vô số ứng dụng khác
** Ví dụ: VxWorks AE, LynyOS, QNX, Chimera

*** Các thành phần cơ bản của RTOS:

                                        KIẾN TRÚC RTOS

        Networking Protocols                POSIX SUPPORT              Device I/O


        Debugging Facilities                   KERNEL                  File System


        Other Components                    ANSI Compliant C Library    Device drivers

+   Bộ lập lich (Scheduler): Thành phần RTOS chính xác định thứ tự thực hiện các tác vụ hoặc luồng thường dựa trên sơ đồ ưu tiên và theo kiểu
        Round-Robin hoặc completion => Tối ưu nhân

+   Đa xử lý đối xứng (SMP - Symmetric Multiprocessing): RTOS có khả năng xử lý và phân tách nhiều tác vụ hoặc luồng để chúng có thể chạy trên 
        nhiều lõi để cho phép xử lý mã song song(nghĩa là đa nhiệm).

+   Thư viện chức năng (Funtion Library): là một giao diện tiêu chuẩn có thể chưa giao diện chương trình ứng dụng (API) để gọi các thường trình 
        bên trong nó, đây là giao diện kết nối mã ứng dụng đó và KERNEL

+   Thời gian chuyển đổi ngữ cảnh/độ trể điều chỉnh nhanh (Fast dispatch latency/ context switch time): độ trể điều chỉnh biểu thị thời gian kể
        từ khi hệ điều hành xác định rằng một tác vụ đã hoàn thành cho đến khi một luồng sẵn sàng chạy được bắt đầu hoặc khi một sự kiện được kích 
        hoạt khiến cho các tác vụ ưu tiên cao hơn có thể thực hiện trước một tác vụ đang chạy

+   Các đối tượng và các lớp dữ liệu do người dùng định nghĩa(User-defined data objects and class)

+   Quản lý bộ nhớ (Memory Management): Cần quản lý bộ nhớ để phân bố bộ nhớ cho mọi chương trình được chạy hoặc đối tượng được tham chiếu trong bộ nhớ



KERNEL: Nhân thời gian thực
+   Task Management: Quản lý tác vụ
+   Task Synchronization & InterTask Communication: Đồng bộ hóa tác vụ và giao tiếp InterTask
+   Timer Management: Quản lý bộ Timer
+   Device I/O Management: Quản lý các thiết bị vào / ra
+   Memory Management: Quản lý bộ nhớ
+   Interrupts  & Events Handling: Ngắt và xử lí sự kiện